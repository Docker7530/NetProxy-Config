provider-template: &provider-template
  type: http
  proxy: DIRECT
  interval: 1800
  health-check:
    enable: true
    url: https://www.gstatic.com/generate_204
    interval: 300

proxy-providers:
  subscription_1:
    <<: *provider-template
    url: "你的机场订阅链接！！！"
    override:
      additional-prefix: "[订阅一]"
  # subscription_2:
  #   <<: *provider-template
  #   url: "你的机场订阅链接！！！"
  #   override:
  #     additional-prefix: "[订阅二]"

mode: rule
port: 7890
socks-port: 7891
mixed-port: 7892
redir-port: 7893
tproxy-port: 7894
ipv6: true
allow-lan: true
unified-delay: true
tcp-concurrent: true
log-level: debug

geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 48
geox-url:
  geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"
  asn: "https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"

external-controller: 0.0.0.0:9095
secret: "9V26Mzb7v3jsjZgDXWGgbkmG1XDjs5wb"
external-ui: "/etc/mihomo/run/ui"
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"
external-controller-cors:
  allow-private-network: true
  allow-origins:
    - "*"

find-process-mode: strict
global-client-fingerprint: chrome
keep-alive-idle: 60
keep-alive-interval: 30

profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "+.mi.com"

tun:
  enable: false
  stack: mixed
  mtu: 9000
  dns-hijack:
    - any:53
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true
  strict-route: false

dns:
  enable: true
  ipv6: true
  prefer-h3: true
  listen: 0.0.0.0:1053
  respect-rules: false
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "+.stun.*.*"
    - "+.stun.*.*.*"
    - "+.stuns.*.*"
    - "+.stuns.*.*.*"
    - "+.wns.windows.com"
    - "+.msftncsi.com"
    - "+.msftconnecttest.com"
    - "rule-set:private_domain,cn_domain"
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  proxy-server-nameserver:
    - https://dns.alidns.com/dns-query
  nameserver-policy:
    rule-set:private_domain,cn_domain:
      - 223.5.5.5
    rule-set:geolocation-!cn:
      - https://cloudflare-dns.com/dns-query
      - https://dns.google/dns-query
  nameserver:
    - 119.29.29.29
  fallback:
    - tls://1.1.1.1:853
    - tls://9.9.9.9:853
  direct-nameserver:
    - system

proxy-templates:
  &proxy-templates {
    type: select,
    proxies:
      [
        默认代理,
        美国手动,
        美国自动,
        美国故转,
        香港手动,
        香港自动,
        香港故转,
        日本手动,
        台湾手动,
        新加坡手动,
        全部手动,
      ],
  }

proxy-groups:
  - {
      name: 默认代理,
      type: select,
      proxies:
        [
          美国手动,
          美国自动,
          美国故转,
          香港手动,
          香港自动,
          香港故转,
          日本手动,
          台湾手动,
          新加坡手动,
          全部手动,
        ],
    }
  - { name: YouTube, !!merge <<: *proxy-templates }
  - { name: Telegram, !!merge <<: *proxy-templates }
  - { name: X, !!merge <<: *proxy-templates }
  - { name: Facebook, !!merge <<: *proxy-templates }
  - { name: Instagram, !!merge <<: *proxy-templates }
  - { name: Google, !!merge <<: *proxy-templates }
  - { name: OpenAi, !!merge <<: *proxy-templates }
  - { name: GitHub, !!merge <<: *proxy-templates }
  - { name: OneDrive, !!merge <<: *proxy-templates }
  - { name: Microsoft, !!merge <<: *proxy-templates }
  - { name: Netflix, !!merge <<: *proxy-templates }
  - { name: PayPal, !!merge <<: *proxy-templates }
  - { name: Steam, !!merge <<: *proxy-templates }
  - { name: Final, !!merge <<: *proxy-templates }
  - {
      name: 美国手动,
      type: select,
      include-all: true,
      filter: "(?=.*?(美国|美|美利坚|US|USA|(?i)States|(?i)America)).*$",
    }
  - {
      name: 美国自动,
      type: url-test,
      include-all: true,
      tolerance: 200,
      interval: 300,
      filter: "(?=.*?(美国|美|美利坚|US|USA|(?i)States|(?i)America)).*$",
    }
  - {
      name: 美国故转,
      type: fallback,
      include-all: true,
      tolerance: 200,
      interval: 300,
      filter: "(?=.*?(美国|美|美利坚|US|USA|(?i)States|(?i)America)).*$",
    }
  - {
      name: 香港手动,
      type: select,
      include-all: true,
      filter: "(?=.*?(香港|港|HK|Hong Kong|Hongkong|HKSAR)).*$",
    }
  - {
      name: 香港自动,
      type: url-test,
      include-all: true,
      tolerance: 100,
      interval: 300,
      filter: "(?=.*?(香港|港|HK|Hong Kong|Hongkong|HKSAR)).*$",
    }
  - {
      name: 香港故转,
      type: fallback,
      include-all: true,
      tolerance: 100,
      interval: 300,
      filter: "(?=.*?(香港|港|HK|Hong Kong|Hongkong|HKSAR)).*$",
    }
  - {
      name: 日本手动,
      type: select,
      include-all: true,
      filter: "(?=.*?(日本|日|Japan|Nippon|JP|Japanese)).*$",
    }
  - {
      name: 台湾手动,
      type: select,
      include-all: true,
      filter: "(?=.*?(台湾|台|Taiwan|TW|ROC|Republic of China|Chinese Taipei)).*$",
    }
  - {
      name: 新加坡手动,
      type: select,
      include-all: true,
      filter: "(?=.*?(新加坡|新|Singapore|SG|Singapura)).*$",
    }
  - { name: 全部手动, type: select, include-all: true }

rules:
  # >>>>>>>>>>>>>>>> Custom Rules >>>>>>>>>>>>>>>>
  - DOMAIN-SUFFIX,komect.net,DIRECT
  # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  - RULE-SET,private_ip,DIRECT,no-resolve
  - RULE-SET,private_domain,DIRECT
  - RULE-SET,cn_ip,DIRECT,no-resolve
  - RULE-SET,cn_domain,DIRECT
  - RULE-SET,steamcn_domain,DIRECT
  - RULE-SET,apple_domain,DIRECT
  - RULE-SET,youtube_domain,YouTube
  - RULE-SET,telegram_domain,Telegram
  - RULE-SET,telegram_ip,Telegram
  - RULE-SET,x_domain,X
  - RULE-SET,facebook_domain,Facebook
  - RULE-SET,facebook_ip,Facebook
  - RULE-SET,instagram_domain,Instagram
  - RULE-SET,openai_domain,OpenAi
  - RULE-SET,github_domain,GitHub
  - RULE-SET,onedrive_domain,OneDrive
  - RULE-SET,netflix_ip,Netflix,no-resolve
  - RULE-SET,netflix_domain,Netflix
  - RULE-SET,paypal_domain,PayPal
  - RULE-SET,steam_domain,Steam
  - RULE-SET,google_ip,Google,no-resolve
  - RULE-SET,google_domain,Google
  - RULE-SET,microsoft_domain,Microsoft
  - MATCH,Final

rule-templates:
  ip-template:
    &ip { type: http, interval: 86400, behavior: ipcidr, format: mrs }
  domain-template:
    &domain { type: http, interval: 86400, behavior: domain, format: mrs }
rule-providers:
  private_ip:
    {
      !!merge <<: *ip,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geoip/private.mrs",
    }
  private_domain:
    {
      !!merge <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/private.mrs",
    }
  cn_ip:
    {
      !!merge <<: *ip,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geoip/cn.mrs",
    }
  cn_domain:
    {
      !!merge <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/cn.mrs",
    }
  steamcn_domain:
    {
      !!merge <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/steam@cn.mrs",
    }
  apple_domain:
    {
      !!merge <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/apple.mrs",
    }
  openai_domain:
    {
      !!merge <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/openai.mrs",
    }
  steam_domain:
    {
      !!merge <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/steam.mrs",
    }
  youtube_domain:
    {
      !!merge <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/youtube.mrs",
    }
  telegram_domain:
    {
      !!merge <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/telegram.mrs",
    }
  telegram_ip:
    {
      !!merge <<: *ip,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geoip/telegram.mrs",
    }
  x_domain:
    {
      !!merge <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/x.mrs",
    }
  facebook_domain:
    {
      !!merge <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/facebook.mrs",
    }
  facebook_ip:
    {
      !!merge <<: *ip,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geoip/facebook.mrs",
    }
  instagram_domain:
    {
      !!merge <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/instagram.mrs",
    }
  google_domain:
    {
      !!merge <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/google.mrs",
    }
  github_domain:
    {
      !!merge <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/github.mrs",
    }
  netflix_domain:
    {
      !!merge <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/netflix.mrs",
    }
  paypal_domain:
    {
      !!merge <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/paypal.mrs",
    }
  onedrive_domain:
    {
      !!merge <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/onedrive.mrs",
    }
  microsoft_domain:
    {
      !!merge <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/microsoft.mrs",
    }
  google_ip:
    {
      !!merge <<: *ip,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geoip/google.mrs",
    }
  netflix_ip:
    {
      !!merge <<: *ip,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geoip/netflix.mrs",
    }
  gfw_domain:
    {
      !!merge <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/gfw.mrs",
    }
  geolocation-!cn:
    {
      !!merge <<: *domain,
      url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/geolocation-!cn.mrs",
    }
